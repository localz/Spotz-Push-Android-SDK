apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.sample.spotzpush"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 19
        versionName "2.2.2"

        buildConfigField 'String', 'SPOTZ_PUSH_PROJECT_ID', '"Insert Spotz Push Project ID here"'
        buildConfigField 'String', 'SPOTZ_PUSH_PROJECT_KEY', '"Insert Spotz Push Android Client key here"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"

    productFlavors {
        fcm {
            dimension "default"
            applicationId 'com.sample.spotzpush.fcm'
            versionName + '-fcm'
        }
        socket {
            dimension "default"
            applicationId 'com.sample.spotzpush.socket'
            versionName + '-socket'
        }
        pushy {
            dimension "default"
            applicationId 'com.sample.spotzpush.pushy'
            versionName + '-pushy'
        }
        pusher {
            dimension "default"
            applicationId 'com.sample.spotzpush.pusher'
            versionName + '-pusher'
            buildConfigField 'String', 'PUSHER_APP_KEY', '"<Insert Pusher App Key here>"'
            buildConfigField 'String', 'PUSHER_CLUSTER', '"<Insert Pusher Cluster here>"'
        }
    }

    sourceSets {
        fcm {
            manifest.srcFile 'src/fcm/AndroidManifest.xml'
            java.srcDirs = ['src/fcm/java']
            res.srcDirs = ['src/fcm/res']
            assets.srcDirs = ['src/fcm/assets']
        }
        socket {
            manifest.srcFile 'src/socket/AndroidManifest.xml'
            java.srcDirs = ['src/socket/java']
            res.srcDirs = ['src/socket/res']
            assets.srcDirs = ['src/socket/assets']
        }
        pushy {
            manifest.srcFile 'src/pushy/AndroidManifest.xml'
            java.srcDirs = ['src/pushy/java']
            res.srcDirs = ['src/pushy/res']
            assets.srcDirs = ['src/pushy/assets']
        }
        pusher {
            manifest.srcFile 'src/pusher/AndroidManifest.xml'
            java.srcDirs = ['src/pusher/java']
            res.srcDirs = ['src/pusher/res']
            assets.srcDirs = ['src/pusher/assets']
        }
    }

    ext {
        supportLibVersion = "27.1.0"
        playServicesVersion = "11.8.0"
        spotzPushSdkVersion = "2.2.1"
    }

    dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])

        //Required for sample app only
        compile "com.android.support:appcompat-v7:$supportLibVersion"

        //Spotz Push SDK dependencies start
        compile 'com.google.code.gson:gson:2.8.2'
        compile('com.google.http-client:google-http-client:1.23.0') {
            exclude module: 'httpclient'
        }
        compile('com.google.http-client:google-http-client-gson:1.23.0') {
            exclude module: 'httpclient'
        }

        compile "com.android.support:support-v4:$supportLibVersion"
        compile "com.google.android.gms:play-services-base:$playServicesVersion"

        //Only required for FCM
        fcmCompile "com.google.firebase:firebase-messaging:$playServicesVersion"
        fcmCompile "com.google.android.gms:play-services-location:$playServicesVersion"
        fcmCompile "com.localz.spotzpush.sdk:spotz-push-sdk-fcm:$spotzPushSdkVersion@aar"

        //Only required for pushy
        pushyCompile "com.localz.spotzpush.sdk:spotz-push-sdk-pushy:$spotzPushSdkVersion@aar"
        //Only required for pusher
        pusherCompile "com.localz.spotzpush.sdk:spotz-push-sdk-pusher:$spotzPushSdkVersion@aar"
        pusherCompile 'org.slf4j:slf4j-api:1.7.25'
        //Only required for socket.io
        socketCompile "com.localz.spotzpush.sdk:spotz-push-sdk-socket:$spotzPushSdkVersion@aar"
        socketCompile ('io.socket:socket.io-client:0.8.3') {
            // excluding org.json which is provided by Android
            exclude group: 'org.json', module: 'json'
        }
    }
}

// Only GCM and FCM need google-services
if (getGradle().getStartParameter().getTaskRequests()
        .toString().contains("Gcm") || getGradle().getStartParameter().getTaskRequests()
        .toString().contains("Fcm")){
    apply plugin: 'com.google.gms.google-services'
}
